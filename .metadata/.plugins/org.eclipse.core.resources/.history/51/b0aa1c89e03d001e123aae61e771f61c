package com.offer.repository;

import java.time.LocalDate;
import java.util.Date;
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.offer.model.Offer;

@Repository
public interface IOfferRepository extends JpaRepository<Offer, Long> {

	List<Offer> findByActivationDateBeforeAndExpirationDateAfter(Date currentDate, Date currentDate2);
	
	@Query("SELECT DISTINCT o FROM table_offer o LEFT JOIN FETCH o.table_offer s " +
	           "WHERE (o.activationDate <= :currentDate AND (o.expirationDate >= :currentDate OR o.expirationDate IS NULL)) " +
	           "OR (s.activationDate <= :currentDate AND (s.expirationDate >= :currentDate OR s.expirationDate IS NULL))")
	    List<Offer> findActiveOffers(@Param("currentDate") Date currentDate);

	    @Query("SELECT o FROM Offer o LEFT JOIN FETCH o.subOffers WHERE o.id = :offerId")
	    Offer findOfferWithSubOffers(@Param("offerId") Long offerId);
}
